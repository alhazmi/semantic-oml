'\" t
.\"     Title: liboml2
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.76.1 <http://docbook.sf.net/>
.\"      Date: 2015-04-16
.\"    Manual: The OML Manual
.\"    Source: OML 2.12.0pre.79-58cf-dirty
.\"  Language: English
.\"
.TH "LIBOML2" "1" "2015\-04\-16" "OML 2\&.12\&.0pre\&.79\-58cf\-" "The OML Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
liboml2 \- OML2 client library
.SH "SYNOPSIS"
.sp
.nf
\fB<oml2\-enabled\-app>\fR [APP\-OPTIONS]
            [\-\-oml\-id OML_NAME \-\-oml\-domain OML_DOMAIN
              [\-\-oml\-collect OML_COLLECT] | \-\-oml\-noop]
            [\-\-oml\-instr\-interval SECONDS]
            [\-\-oml\-interval SECONDS | \-\-oml\-samples COUNT]
            [\-\-oml\-log\-level \-2\&.\&.4] [\-\-oml\-log\-file]
            [\-\-oml\-config liboml2\&.conf]
            [\-\-oml\-bufsize BYTES]
            [\-\-oml\-text|\-\-oml\-binary]
            [\-\-oml\-help] [\-\-oml\-list\-filters]
            [\-\-oml\-\&...]
.fi
.SH "DESCRIPTION"
.sp
\fBliboml2\fR is the client library for OML2\&. It provides an API for application writers to collect measurements from their applications via user\-defined \fIMeasurement Points\fR (MPs)\&. It also provides a flexible filtering and collection mechanism that allows application users to customize how measurements are processed and stored by an OML\-enabled application\&. Data \fIinjected\fR into an MP by the application is serialised into a \fIMeasurement Stream\fR (MS), and sent to a \fICollection Point\fR (e\&.g\&., an \fBoml2-server\fR(1) or a file)\&. Measurement samples can also be filtered, pre\-processed or aggregated using a set of built\-in filters\&.
.sp
This man page documents the command\-line user configuration of OML\-enabled applications\&. Application writers who want to learn how to write an application using the \fBliboml2\fR API should consult \fBliboml2\fR(3)\&. OML also supports an external configuration file, documented in \fBliboml2.conf\fR(5)\&.
.sp
When an OML application starts up, it passes the command line arguments to \fBliboml2\fR, which scans them for options that it understands, and uses those to configure itself\&. \fBliboml2\fR then removes its own options from the command line so that the application proper does not get confused by them\&. All OML options start with the prefix \fB\-\-oml\-\fR\&. The \fB\-\-oml\-help\fR option lists all the known OML command line options\&.
.sp
The command line options recognized by \fBliboml2\fR allow for a basic configuration of the measurement library\&. They are adequate for testing and debugging, but do not offer as much flexibility as the external configuration file format supports\&. You can pass a configuration file to \fBliboml2\fR using the \fB\-\-oml\-config\fR option\&. For details, see \fBliboml2.conf\fR(5)\&.
.sp
By default, any instrumentation starts with two OML\-specific MPs\&. The first one, \fI_experiment_metadata\fR, contains information about the experiment currently running, as well as application specific details that would not justify a full MP on their own such as version, command line invokation, or unit or precision of some fields\&. The second automatic MP is \fI_client_instrumentation\fR\&. When enabled (see option \fB\-\-oml\-instr\-interval\fR in OML OPTIONS below), the application will periodically inject status report into that stream\&. Status reports contain the following information
.SH "MEASUREMENT FILTERING"
.sp
The \fBliboml2\fR can process measurement tuples in\-line before they are sent to a collection point\&. The filtering mechanism allows to select a subset of the fields of an MP which need to be sent along, apply aggregation or summary functions on them rather than sending them verbatim, and set the periodicity (time\- or sample\- based) at which aggregate reports are sent (see \fB\-\-oml\-interval\fR or \fB\-\-oml\-samples\fR in OML OPTIONS below)\&.
.sp
When no configuration file is given, \fBliboml2\fR provides a basic set of filters for each MP, and sends measurements to just one location (using the \fB\-\-oml\-collect\fR option)\&. For each measurement point, each element of the measurement point\(cqs injected tuple is given its own filter\&. The filter created depends on the type of the element and the current sampling policy\&.
.sp
For instance, suppose a measurement point defined with a measurement tuple as follows:
.sp
.if n \{\
.RS 4
.\}
.nf
MeasurementPoint (name = "link_properties")
("source"      : OML_UINT64_VALUE,
 "destination" : OML_UINT64_VALUE,
 "length"      : OML_INT32_VALUE,
 "snr"         : OML_DOUBLE_VALUE,
 "name"        : OML_STRING_VALUE)
.fi
.if n \{\
.RE
.\}
.sp
Then \fBliboml2\fR will create a separate filter for each of "source", "destination", "length", "snr", and "name"\&. The filters for the first four numeric elements will be an averaging filter (filter type \fIavg\fR), and the last string element will be given a \fIfirst\fR filter\&. The \fIfirst\fR filter keeps the first injected value in the current sampling period and throws away all others, passing the first value on to the measurement output stage\&.
.sp
The exception to this rule is that if \fB\-\-oml\-samples\fR was given, and if the argument is 1, then numeric elements are filtered using the \fIfirst\fR filter, not the averaging filter\&.
.sp
For more information on OML filters and how they are configured, see the documentation for the configuration file format, \fBliboml2.conf\fR(5)\&. For more information on measurement points and how they are defined, see \fBliboml2\fR(3) and \fBomlc_add_mp\fR(3)\&.
.SH "MEASUREMENT STREAMS AND SCHEMAS"
.sp
Where MSs generated by an OML instrumentation are sent depends on the collection URI (see URI FORMAT below)\&. If using the \fBtcp\fR scheme, it is sent to the named \fBoml2-server\fR(1), for storage in an SQL database, while using the \fBfile\fR or \fBflush\fR schemes will create a local file with the given name containing OML text mode protocol which can later on be stream (e\&.g\&., using \fBnc\fR(1)) to an \fBoml2\-server\fR\&. Measurement points are created with a \fIschema\fR, as above, a schema being an ordered list of (name, type) pairs\&.
.sp
OML filters also generate output with a declared schema\&. For each measurement point, \fBliboml2\fR generates a single output measurement that is the union of the outputs of all filters attached to the MP\&. The names of the fields (or columns) of the schema are derived from the names of the original MP fields, and the output schemas of the filters\&. The schemas can be observed directly with the \fBfile\fR collection URI schemes (e\&.g\&., \fBfile:\-\fR) output (identical schemas are sent to the server when the \fBtcp\fR scheme is used)\&. For instance, here is the output schema for a simple example MP that measures a string ("label") and an integer ("seq_no"):
.sp
.if n \{\
.RS 4
.\}
.nf
schema: 1 generator_lin label:string seq_no:uint32
.fi
.if n \{\
.RE
.\}
.sp
The schema name is "generator_lin" \(em a combination of the application name ("generator") and the measurement point name ("lin")\&. (The number \fI1\fR on this line is an index used in the output columns to identify a line of measurement with the schema to which it conforms\&.) This output was made using \fB\-\-oml\-samples 1\fR on the command line\&. This creates a \fIfirst\fR filter for both of the fields of the measurement point\&. The \fIfirst\fR filter outputs a single value that has the same type as the filter\(cqs input\&.
.sp
If we change the command line to use \fB\-\-oml\-samples 2\fR, then an averaging filter is used for the numeric "seq_no" field ("label" is unchanged)\&. The schema therefore changes as well:
.sp
.if n \{\
.RS 4
.\}
.nf
schema: 1 generator_lin label:string \e
                        seq_no_avg:double \e
                        seq_no_min:double \e
                        seq_no_max:double
.fi
.if n \{\
.RE
.\}
.sp
(\fBliboml2\fR always emits schemas on a single line, but this schema is split into several for readability\&.)
.sp
An \fIavg\fR filter picks one field of the MP to filter (in this case "seq_no") and then produces a 3\-tuple as output (avg, min, max)\&. Therefore \fBliboml2\fR creates a schema for this filter output that looks like:
.sp
.if n \{\
.RS 4
.\}
.nf
("seq_no_avg" : OML_DOUBLE_VALUE,
 "seq_no_min" : OML_DOUBLE_VALUE,
 "seq_no_max" : OML_DOUBLE_VALUE)
.fi
.if n \{\
.RE
.\}
.sp
This is the general pattern for filters: their output schemas are formed by appending the name of the source MP with the name of the filter output field\&. (The \fIfirst\fR filter is an exception in that it just takes the name of the input field and uses that as the output field name\&.)
.sp
When a \fBtcp\fR collection URI is specified, the received \fBoml2\-server\fR creates a database table for each measurement point using the combined OML output schema as schema for the table\&. For instance, the above example would translate to an SQL CREATE TABLE statement like:
.sp
.if n \{\
.RS 4
.\}
.nf
CREATE TABLE generator_lin (label TEXT, seq_no_avg REAL, seq_no_min REAL, seq_no_max REAL);
.fi
.if n \{\
.RE
.\}
.sp
Note that even though an MP field may have an integral type, it may be represented as a floating point type in the output because the filter may output floating point values\&. For instance, the average of a set of integers is real valued because of the division in the averaging operation\&.
.sp
Another situation may arise when a table by the same name, but with a different schema, already exists in the target database\&. In this case, the \fBoml2-server\fR(1) tries to incrementally number the new table\(cqs name (e\&.g\&., \fImymp_2\fR, \fImymp_3\fR,\&... for stream \fImymp\fR)\&. It makes 9 attempts at renaming the table before failing\&. Indeed, it would be unwise for experiments that use a large number of instances of the same application with different filter configuration to not explicitly name each of them\&. This can be done through the use of a configuration file, with these \fIrename\fR attribute of the relevant \fImp\fR element, see \fBliboml2.conf\fR(5)\&.
.SH "OML OPTIONS"
.PP
\-\-oml\-id OML_NAME
.RS 4
Set the OML client\(cqs identity to
\fIOML_NAME\fR\&. This is used by the
\fBoml2-server\fR(1)
to distinguish measurements of the same type from different sources (for example, the same application running on a different machine)\&. If
\fB\-\-oml\-id\fR
is not given, an error is printed and measurement collection will not occur (although the application may still run)\&.
.RE
.PP
\-\-oml\-domain OML_DOMAIN, \-\-oml\-exp\-id OML_DOMAIN
.RS 4
Set the OML client\(cqs experimental domain to
\fIOML_DOMAIN\fR\&. This is used by the
\fBoml2-server\fR(1)
to group measurements from different clients that logically belong to the same group\&. Multiple applications running on different machines can contribute measurements to the same experiment\&. If
\fB\-\-oml\-domain\fR
is not given, an error is written to the log file and measurement collection will not occur (although the application may still run)\&. The
\fB\-\-oml\-exp\-id\fR
option is obsolescent, and
\fB\-\-oml\-domain\fR
should be preferred\&.
.RE
.PP
\-\-oml\-collect OML_COLLECT, \-\-oml\-server OML_COLLECT
.RS 4
Send measurements to the OML server specified by the
\fIOML_COLLECT\fR
URI\&. Only one of
\fB\-\-oml\-collect\fR
or
\fB\-\-oml\-server\fR
can be active at a time\&. The format of
\fIOML_COLLECT\fR
is described in
URI FORMAT
below\&. The
\fIOML_COLLECT\fR
can specify the address and port at which either an
\fBoml2\-server\fR
or an
\fBoml2\-proxy\-server\fR
is listening\&. The
\fB\-\-oml\-server\fR
option is obsolescent, and
\fB\-\-oml\-collect\fR
should be preferred\&.
.RE
.PP
\-\-oml\-file FILENAME
.RS 4
Write measurements to file
\fIFILENAME\fR, in a human readable text format\&. This is an exact equivalent to
\fB\-\-oml\-collect file:FILENAME\fR, see below\&. Only one of
\fB\-\-oml\-collect\fR
(or
\fB\-\-oml\-server\fR) or*\-\-oml\-file* can be specified at a time\&. This command line option is obsolescent, and
\fB\-\-oml\-collect\fR
with the
\fBfile\fR
scheme should be preferred\&.
.RE
.PP
\-\-oml\-noop
.RS 4
If this option is given, no measurements are collected, and the application does not attempt to connect to an OML server or write measurements to file\&.
.RE
.PP
\-\-oml\-instr\-interval SECONDS
.RS 4
This option allows to set the periodicity of self\-instrumentation reports into the
\fI_client_instrumentation\fR
MS\&. The defaults is 1000ms, and the feature can be disabled altogether by setting it to 0\&.
.RE
.PP
\-\-oml\-interval SECONDS
.RS 4
Make all measurement point filters produce an output periodically with a time period of
\fISECONDS\fR\&. Only one of
\fB\-\-oml\-interval\fR
and
\fB\-\-oml\-samples\fR
can be given on the same command line\&.
.RE
.PP
\-\-oml\-samples COUNT
.RS 4
Make all measurement point filters produce an output after every
\fICOUNT\fR
samples have been injected into them\&. Only one of
\fB\-\-oml\-samples\fR
and
\fB\-\-oml\-interval\fR
can be given on the same command line\&. If neither
\fB\-\-oml\-samples\fR
nor
\fB\-\-oml\-interval\fR
are given, then
\fBliboml2\fR
behaves as if
\fB\-\-oml\-samples\fR
was given with an argument of
\fICOUNT\fR=1\&.
.RE
.PP
\-\-oml\-config FILE
.RS 4
Read the contents of
\fIFILE\fR
and use them to configure the
\fBliboml2\fR
client\&. See
\fBliboml2.conf\fR(5)
for details of the configuration file format\&. Generally, the configuration taken from
\fIFILE\fR
overrides any equivalents from the command line\&. Command line options that cannot be set using the configuration file are
\fB\-\-oml\-noop\fR,
\fB\-\-oml\-instr\-interval\fR,
\fB\-\-oml\-bufsize\fR,
\fB\-\-oml\-log\-level\fR, and
\fB\-\-oml\-log\-file\fR\&.
.RE
.PP
\-\-oml\-log\-level n
.RS 4
Record logging information at a level of detail given by
\fIn\fR, which should be an integer from 0 to 4\&. The default level of logging is 0, which prints
\fIERROR\fR,
\fIWARNING\fR, and
\fIINFO\fR
messages\&. Levels 1 to 4 add gradually larger amounts of debug logging (\fIDEBUG\fR,
\fIDEBUG2\fR,
\fIDEBUG3\fR,
\fIDEBUG4\fR)\&. It is possible to set
\fIn\fR
to \-1 for only
\fIERROR\fR
and
\fIWARNING\fR
logging, or \-2 for only
\fIERROR\fR
logging\&.
.RE
.PP
\-\-oml\-log\-file file
.RS 4
Write OML logging information to
\fIfile\fR\&. The amount of logging information recorded is controlled by
\fB\-\-oml\-log\-level\fR\&.
.RE
.sp
By default, the OML library logs messages to the application\(cqs \fBstderr\fR, prefixed with the level of the messages\&. If logging to a file, messages are also prefixed with a timestamp\&. The application writer can override this behaviour by providing a custom logging function when calling \fBomlc_init\fR(3)\&.
.PP
\-\-oml\-bufsize size (bytes)
.RS 4
Set the size of internal buffers used by
\fBliboml2\fR\&. There is one buffer per output destination, and each one is allowed to grow to roughly this size in bytes\&. For various reasons the buffers can grow a certain amount more than this size, but will still be bounded\&.
\fB\-\-oml\-bufsize\fR
specifies the lower bound on the maximum buffer size\&. The default is 2048 bytes\&. If the maximum allowed buffer size is exceeded,
\fBliboml2\fR
will start dropping measurement data (with a message in the client log file)\&. Increasing the buffer size may prevent this from happening, depending on the application design\&.
.RE
.PP
\-\-oml\-text
.RS 4
Encode measurements using text format when writing to either a local file or a remote server\&. Text format is easy for scripts to parse, with one measurement per line, and is the default when a
\fBfile\fR
URI scheme is used\&. Only one of
\fB\-\-oml\-text\fR
and
\fB\-\-oml\-binary\fR
should be used on the same command line\&.
.RE
.PP
\-\-oml\-binary
.RS 4
Encode measurements using binary format when writing to either a local file or a remote server\&. The binary format is the default when
\fBtcp\fR
URI scheme is given, and provides better performance\&. Only one of
\fB\-\-oml\-text\fR
and
\fB\-\-oml\-binary\fR
should be used on the same command line\&.
.RE
.PP
\-\-oml\-help
.RS 4
Prints a summary of the available OML options\&.
.RE
.PP
\-\-oml\-list\-filters
.RS 4
This option prints the available filters to the console and then quits the application\&.
.RE
.SH "URI FORMAT"
.sp
\fBliboml2\fR accepts a \fIuri\fR argument for the \fB\-\-oml\-collect\fR option that is similar to an IETF URI (see e\&.g\&. RFC3986)\&. The OML URI consists of an optional network protocol, a host identifier, and an optional port number, or a mandatory \fBfile\fR (or \fBflush\fR )scheme and a local filesystem path\&. The format of the network server version is:
.sp
.if n \{\
.RS 4
.\}
.nf
[tcp:][//]<host>[:<port>]
.fi
.if n \{\
.RE
.\}
.sp
The formats for the local file version is:
.sp
.if n \{\
.RS 4
.\}
.nf
(file|flush):<local\-path>
.fi
.if n \{\
.RE
.\}
.sp
For instance, \fItcp:collect\&.example\&.net:3003\fR or \fItcp://collect\&.example\&.net:3003\fR will send measurements to an \fBoml2\-server\fR listening on port \fI3003\fR on host \fIcollect\&.example\&.net\fR, using TCP\&. The \fI//\fR is recognized but optional and not recommended\&. Either a hostname or an IP address can be used as the \fI<host>\fR specifier\&. Both IPv4 and IPv6 addresses are supported, but it is mandatory to put the latter between square brackets; this is optional for the former\&. \fItcp:[2001:db8::1]:3003\fR, \fItcp:[192\&.0\&.2\&.200]:3003\fR and \fItcp:192\&.0\&.2\&.200:3003\fR are all valid forms\&. The \fI<port>\fR specifier is optional, defaulting to port 3003\&. The \fBtcp\fR scheme is the default if this part is omitted\&.
.sp
Alternatively, \fIfile:/tmp/myfile\&.txt\fR writes to the /tmp/myfile\&.txt file in the local filesystem\&. Relative paths are also accepted\&. There should be no double\-slash after the colon: \fIfile://myfile\&.txt\fR is treated the same as \fIfile:/myfile\&.txt\fR, i\&.e\&., it will try to write the output in the root directory\&. The special file URL \fIfile:\-\fR will write output to the standard output\&. The \fBflush\fR scheme behaves exactly in the same way as \fBfile\fR except the file descriptor is flushed after each a measurement line is written out\&. This allows to prevent any size\-based buffering in the C library from delaying the recording of samples\&. This is useful in case of, e\&.g\&., real time graphing of the data based on the contents of the file\&.
.SH "ENVIRONMENT VARIABLES"
.sp
\fBliboml2\fR recognizes the following environment variables\&. Note that the equivalent command line options override any value set in an environment variable\&.
.PP
OML_NAME
.RS 4
The name to identify this client to the OML server, equivalent to the
\fB\-\-oml\-id\fR
command line option\&.
.RE
.PP
OML_DOMAIN, OML_EXP_ID
.RS 4
The name of the experiment to which this client\(cqs measurements belong\&. Used for grouping measurements into the same database on the server\&. Equivalent to the
\fB\-\-oml\-domain\fR
command line option\&.
\fIOML_EXP_ID\fR
is obsolescent and kept for backward compatibility\&.
.RE
.PP
OML_CONFIG
.RS 4
The path to the configuration file to use to configure the client\&. Equivalent to the
\fB\-\-oml\-config\fR
command line option\&.
.RE
.PP
OML_COLLECT, OML_SERVER
.RS 4
The URI of the server to which the measurements should be sent\&. The value of this environment variable should be a URI in the same format specified above (URI FORMAT)\&. If the URI specifies the
\fBfile\fR
scheme, the measurements are written to the local text file specified in the URI, rather than being sent to an OML server\&. Equivalent to the
\fB\-\-oml\-collect\fR
command line option\&.
\fIOML_SERVER\fR
is obsolescent and kept for backward compatibility\&.
.RE
.PP
OML_FEATURES
.RS 4
A comma\-separated list of run\-time features to enable\&. Currently the following are recognized:
.sp
.RS 4
.ie n \{\
\h'-04'\(bu\h'+03'\c
.\}
.el \{\
.sp -1
.IP \(bu 2.3
.\}
"default\-log\-simple" (default): All log output will be sent to
\fBstderr\fR
if no log file was selected using \-\-oml\-log\-file, or if the argument of \-\-oml\-log\-file was "\-", and the logging will use new\-style logging to
\fBstderr\fR\&. This means all log messages are prefixed with a label indicating the severity, i\&.e\&., "ERROR", "WARN", "INFO", "DEBUG", "DEBUG2", etc\&.
.RE
.RE
.SH "BUGS"
.sp
The selection of the \fIfirst\fR filter when \fB\-\-oml\-samples 1\fR is used can be confusing for numeric MP fields because it results in a different schema in the measurement output compared to other possible configurations available from the command line, which use the \fIavg\fR filter\&. It is not clear whether this is a feature or a bug\&.
.sp
If a problem you are experiencing is not addressed in the FAQ (http://oml\&.mytestbed\&.net/projects/oml/wiki/FAQ_and_Support) nor already present in the list of know bugs (http://oml\&.mytestbed\&.net/projects/oml/issues)\&. You could discuss it on the mailing list (details and archives at http://oml\&.mytestbed\&.net/tab/show?id=oml)\&.
.sp
It is however advisable to open a ticket on our issue tracker at http://oml\&.mytestbed\&.net/projects/oml/issues/new\&. Don\(cqt forget to include details such as client and server logs (at \fI[\-\-oml\-log\-level|\-d] 2\fR)\&. It also helps if you can share the source code of a (minimal, if possible) example reliably triggering the problem\&.
.SH "SECURITY CONSIDERATIONS"
.sp
\fIoml2\-server\fR does not use any authentication, and should thus be considered insecure\&. It is intended to be deployed behind firewalls on a dedicated testbed network\&. It should not be run as a daemon on an open network\&. Future versions of OML may be re\-designed to be suitable for use in insecure environments\&.
.SH "SEE ALSO"
.SS "Manual Pages"
.sp
\fBoml2-server\fR(1), \fBoml2-proxy-server\fR(1), \fBliboml2\fR(3), \fBomlc_add_mp\fR(3), \fBliboml2.conf\fR(5)
.SS "OML User Manual"
.sp
http://oml\&.mytestbed\&.net/projects/oml/wiki/Documentation
