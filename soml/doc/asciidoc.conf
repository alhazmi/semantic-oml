# linkman: macro
#
# Usage:  linkman:command[manpage-section]
#
# Note, {1} is the manpage section, while {target} is the command.
#
# Show manpage link as <command>(<section>) if section is defined, otherwise just show
# the command. Creates links to die.net's man page collection when relevant.
#
[macros]
(?su)[\\]?(?P<name>linkman):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=

ifdef::backend-docbook[]
[linkman-inlinemacro]
{0%{target}}
{0#<citerefentry>}
{0#<refentrytitle>{target}</refentrytitle><manvolnum>{1}</manvolnum>}
{0#</citerefentry>}
endif::backend-docbook[]

ifdef::backend-xhtml11[]
[linkman-inlinemacro]
<a href="http://linux.die.net/man/{1?{1}}/{target}">{target}{1?({1})}</a>
endif::backend-xhtml11[]

# linkoml: macro
#
# Usage:  linkoml:command[manpage-section]
#
# Note, {0} is the manpage section, while {target} is the command.
#
# Show manpage link as <command>(<section>) if section is defined, otherwise
# just show the command.
#
[macros]
(?su)[\\]?(?P<name>linkoml):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=

ifdef::backend-docbook[]
[linkoml-inlinemacro]
{0%{target}}
{0#<citerefentry>}
{0#<refentrytitle>{target}</refentrytitle><manvolnum>{1}</manvolnum>}
{0#</citerefentry>}
endif::backend-docbook[]

ifdef::backend-xhtml11[]
[linkoml-inlinemacro]
<a href="{target}{1?.{1}}.html{2?#{2}}">{target}{1?({1})}</a>
endif::backend-xhtml11[]

# linkomlalias: macro
#
# Usage:  linkomlalias:alias[command,manpage-section]
#
# Note, {1} is the manpage section, while {target} is the command linked to, but
# {alias} is the displayed text. Both alias and target are assumed to be in the
# same section.
#
# Show manpage link as <alias>(<section>) if section is defined, otherwise just show
# the command; in either case, link to <target>(<section>). This is only really
# useful for HTML generation, as manpage aliasing is done differently, with
# ROFF(7) links.
#
[macros]
(?su)[\\]?(?P<name>linkomlalias):(?P<target>\S*?)\[(?P<attrlist>.*?)\]=

ifdef::backend-docbook[]
[linkomlalias-inlinemacro]
{0%{target}}
{0#<citerefentry>}
{0#<refentrytitle>{target}</refentrytitle><manvolnum>{2}</manvolnum>}
{0#</citerefentry>}
endif::backend-docbook[]

ifdef::backend-xhtml11[]
[linkomlalias-inlinemacro]
<a href="{1}{2?.{2}}.html">{target}{2?({2})}</a>
endif::backend-xhtml11[]

# header
#
# This Docbook output is use for the generation of manpages.
# It is normal that the refentry element is not closed in this snippet.
#
ifdef::doctype-manpage[]
ifdef::backend-docbook[]
[header]
template::[header-declarations]
<refentry>
  <refentryinfo><date>{docdate}</date></refentryinfo>
  <refmeta>
    <refentrytitle>{mantitle}</refentrytitle>
    <manvolnum>{manvolnum}</manvolnum>
    <refmiscinfo class="source">OML</refmiscinfo>
    <refmiscinfo class="version">{oml_version}</refmiscinfo>
    <refmiscinfo class="manual">The OML Manual</refmiscinfo>
  </refmeta>
  <refnamediv>
    <refname>{manname}</refname>
    <refpurpose>{manpurpose}</refpurpose>
  </refnamediv>
endif::backend-docbook[]
endif::doctype-manpage[]

# footer-text
#
# Add OML version in HTML footer.
#
ifdef::backend-xhtml11[]
[footer-text]
OML {oml_version}{basebackend-xhtml11?<br />}{basebackend-xhtml11=<br>}
Last updated {docdate} {doctime}
endif::backend-xhtml11[]
